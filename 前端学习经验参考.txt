es6 webpack 和nodejs 
原生做壳，其他html5来实现，（hybird）
##############################################################
html-css-js-es6-npm-vue-项目  然后是webpack，http协议，前端性能优化，
##############################################################
nwjs，vuido，electron pc端都可以关注下

javascript权威指南，javascript高级程序设计，ecmascript6入门，三本书

学习web前端后能干什么
开发网页，h5动画，手机端app，做自己的博客，做微信公众号开发，开发小程序，结合nwjs做电脑客户端软件：比如微信的pc版本，钉钉pc版本

##############################################################
html css  js  jquery bootstrap html5 css3 vue   一两个项目
##############################################################
1.html 掌握基本的html标签，并能简单的展示
2.css 学会怎么去简单的布局，简单上色，然后是稍微复杂的布局，比如：浮动，定位，一定要弄清楚
3.js基础 学习怎么去运行简单的js功能，学会变量，函数，逻辑块，学会封装，扩大知识面学习js很多对象的内置函数，学习proto
4.jquery  打好基础就可以从简单的框架开始，jquery很有用，很简单可以作为入门级的框架来学习
5.bootstrap 结合一个ui框架会让你真正能做一个类公司项目
6.html5 css3 学习，基础打完了，学完上面的简单框架就可以升级下所学的js，css，这时候可以学习下html5新规范，css3新属性，新布局方式，es6新语法
7.vue学习，这时候基本可以做项目了，选择一个mvc框架来学习，angular，react，vue都可以，建议vue，入门简单，国内流行，顺带webpack也学习了
8.这样完成一两个项目之后，就成了初级前端工程师

##############################################################
webstorm，html，css，js，纯js操作dom和jquery ，bootstrap，css3，深入js，vue全家桶，nodejs升级
##############################################################

学习大纲：
1.一个开发工具，webstorm，hbuilder，vscodde，sublime都行
2.html基础 带你认识html，让你学习去运行html，等浏览器上面打开你的页面的时候，你会有很强的成就感，然后开始学习html的基础标签
3.css基础 html是勾勒，css是染色，基础的css 学完，你会有种想写页面的冲动，这时候你不用压抑住那种感觉，直接按照自己所想开写，这是你的第一个项目
4.js基础 js是页面的逻辑，作为一个web前端工程师，js是很核心的部分，也是很难的部分。js的学习之后放长一些，尤其是前一周，要让自己去熟悉那种语法环境，培养自己的开发思路，而且有一点就是
学完一个星期的知识之后，即使和你的知音人沟通，看看自己的理解是否有错误，还有就是学习思路是否有问题，他会给你指出哪些东西学要多学习，那些不常用还有就是给你点一下你学的这些在项目中怎么去应用，理论联系实际
是最好的学习方式
5.纯js操作dom和jquery  这阶段要知道如何用js来更改页面的元素，怎么去写dom事件，经过一番练习后，再引入jquery，不要本末倒置，有个同学学完jquery后说发誓，以后再也不用原生js操作dom，然后被我狠狠骂了一顿
6.开始你的ui框架之旅
这个阶段我推荐从bootstrap开始，这个框架很经典，响应式的栅格系统被后来框架一直沿用，在我线下教学的那几年，我都会带着学生一起看bootstrap、源码，让他们学会这种设计思想，因为之后对他们太有用了，当时他们很痛苦，
现在他们呢说起来觉得很受益，如果可以，你也要去看看源码，先学会去定制bootstrap，公司注重二次开发，定制bootstrap正好可以练手
7.开始深入css3
基础学完css3要提上日程，这时候你会看到不一样的世界
8.深入js
这阶段你就要去解读原型链，原型替换，this指向，es6 es7的新语法
9.学一套主流mvc框架
vue react angular2选一种，我建议从vue开始，react的jsx语法不适合入门，angular2的typescript语法糖难度也比较高，vue学起来平滑，结合vue，学一下vue-router,vuex,element ui axios,webpack做项目玩一下这个全家桶
10.升级后台语言nodejs
这个不做要求，你在学vue的时候，其实已经在用nodejs了，你用的npm就是nodejs的一部分，这个阶段说的是nodejs编程，比较难理解，毕竟是写服务器的东西，不过前面基础打牢古，让别人一点拨，就能上手技术不难，难在思路转换
##############################################################
一星期html，css。js和dom，jquery，php，bootstrap，webapp中phonegap和ionic ，nodejs，
##############################################################

第二个人的学习路程：
1.自学web阶段，是通过淘宝买的学习视频，也是某些上市公司的学习视频以及腾讯课堂，30元
2.开始学习的时候兴趣蛮高的，但是学着学着就会有犹豫，有彷徨，也看过很多前辈的文章收获也是颇丰，
3.起初html和css 花了一个星期，很容易上手，也是最能提高积极性的，看着自己做的一个页面很开心
4.步入js阶段，也是大部分初学者最容易放弃的，最迷茫的阶段，因为0基础，真的很难，逻辑算法，语法，api各种要记，要背的东西真的很多，还要灵活去用。自己也只是跟着视频依葫芦画瓢，一点思路都没有，完全不懂js是干嘛的，看一些前辈说js很重要，
就反反复复学习，说实话用处不大，因为这时候根本不知道js作用，自己要写一个简单的页面都做不到，这个时候也产生过放弃
5.js勉强学习下来，到了dom阶段，更让人崩溃，不说其他的，就是简单的语法记起来让我一度怀疑人生，别说操作什么的了，勉强把dom看完这个时候脑子一片混乱而且连之前学的html和css也忘得差不多了，所以说这个时候是所有0基础的自学的最大障碍，因为
这个时候你真的想要放弃，也确实我放弃了一段时间。
6.慢慢耐下性子，又看了jquery，看到这儿突然感觉dom不难了，语法也简化了，用起来感觉自己有一点点能接受了，这个时候如果你能坚持下来，真的你就度过了前端最难的环节，毫不夸张的说你自学已经成功了70%了，因为学习中最怕的就是迷茫，看不到希望。
7.php也是我感觉web最有趣的一部分，因为你可以大胆不去想js，当作出来第一个最简单的后台页面，真的给你很大的自豪和成就感。这个部分也能给你很大的提升，也是很重要的。但说实话学完php，自己连一个合格的页面都做不出来，因为自己写出来的代码，
对应的页面肯定是乱七八糟的，都是东拼西凑的，代码也是乱七八糟的根本没有任何可读性，但你一定不要放弃
8.bootstrap这个东西是自己接触的第二个框架，真心感觉太tm好用了，好用到飞起，这简直就是福音，不敢想象还有这么好用的东西
9.接下来学习的事angular这东西，也真的很好学，双向数据绑定，那个时候都让我膨胀了。我感觉前端我一定能学好
10.webapp中phonegap和ionic 学完真心让我自己装了一波好逼，看着自己做的手机软件，感觉地球都抓不住我了，成就感爆棚
11.后续也是很重要，框架我也就不一一说了，学起来确实不难，都是一些记忆东西，多做练习，多自己写代码
12.到了最重要的nodejs 这个可以说是让我最纠结的东西，因为自己之前js真的很差。写代码每次都翻笔记，对nodejs很害怕，但是还是硬着头皮学习，不夸张的说，当你学完nodejs的时候，你感觉nodejs绝对是上帝给你送来的福音
13.到这里我也就介绍完了，说一下自己的心得：自学前端最难的就是js阶段，如果你在js中犹豫，迷茫，不如往后看看，因为后面的东西真的很精彩，而且后面所有的东西你都能用到js，你会在一步步的学习慢慢对js了解和掌握，js最重要的就是
明白了解他的作用，在学习和工作中会一点点掌握，自己现在js运用也不是很熟练，每次都要去看笔记和手册。学习中重要一点是不放弃，善于调节自己，先不要考虑能不能找到工作，工资高不高，耐下心学完，希望我的经历和心理路程能帮到你。




